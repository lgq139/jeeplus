<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jeeplus</groupId>
        <artifactId>jeeplus</artifactId>
        <version>6.5</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>jeeplus-web</artifactId>
    <packaging>${packaging.type}</packaging>

    <name>jeeplus-web</name>
    <description>starter</description>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <lib.path>${basedir}/src/main/webapp/WEB-INF/lib</lib.path>
    </properties>

    <dependencies>
        <!-- 达蒙数据库驱动 -->

        <!--oracle驱动-->
        <dependency>
            <groupId>ojdbc8</groupId>
            <artifactId>ojdbc8</artifactId>
            <systemPath>${lib.path}/ojdbc8.jar</systemPath>
            <scope>system</scope>
            <version>8</version>
        </dependency>

        <dependency>
            <groupId>org.jeeplus</groupId>
            <artifactId>jeeplus-business</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

    </dependencies>


    <profiles>
        <profile>
            <id>war</id>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <build>
                <finalName>baseconfig</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>default</id>
            <properties>
                <packaging.type>jar</packaging.type>
            </properties>
            <build>
                <plugins>
                    <!-- 分离打包开始 -->
                    <!-- 跳过测试代码 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.22.2</version>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    <!-- maven打包成jar的插件 -->
                    <!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.2.0</version>
                        <configuration>
                            <!-- 把target/classes/下的文件导入到jar内 -->
                            <classesDirectory>target/classes/</classesDirectory>
                            <finalName>startup</finalName>
                            <archive>
                                <manifest>
                                    <!-- 指定程序入口 -->
                                    <mainClass>com.jeeplus.JeeplusWebApplication</mainClass>
                                    <!-- 打包时 MANIFEST.MF文件不记录的时间戳版本 -->
                                    <useUniqueVersions>false</useUniqueVersions>
                                    <!-- 是否添加依赖的jar路径配置 -->
                                    <addClasspath>true</addClasspath>
                                    <!-- 服务依赖的jar包放在lib目录下 -->
                                    <classpathPrefix>lib/</classpathPrefix>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                </manifest>
                                <manifestEntries>
                                    <!--MANIFEST.MF 中 Class-Path 加入资源文件目录 -->
                                    <Class-Path>resources/ lib/aliyun-java-sdk-core-3.3.1.jar
                                        lib/aliyun-java-sdk-dysmsapi-1.0.0.jar lib/ojdbc8-8.jar
                                    </Class-Path>
                                </manifestEntries>
                            </archive>
                            <!-- jar包中不包括以下文件 -->
                            <excludes>
                                <exclude>static/**</exclude>
                                <exclude>templates/**</exclude>
                                <exclude>public/**</exclude>
                                <exclude>shp/**</exclude>
                                <exclude>tpl/**</exclude>
                                <exclude>**/*.yml</exclude>
                                <exclude>**/*.properties</exclude>
                            </excludes>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
                    <!-- 分离打包关键代码 maven-dependency-plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <type>jar</type>
                                    <includeTypes>jar</includeTypes>
                                    <!-- 存放服务依赖的jar包，存放在服务相同目录的lib文件夹下 -->
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- 分离打包关键代码 maven-resources-plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- 指定resources文件 -->
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <!-- 分环境过滤开启 -->
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>application.properties</include>
                                                <!-- 分环境配置文件不用可删除 -->
                                                <!-- <include>application-${profiles.active}.yml</include> -->
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <!-- 分环境过滤关闭 -->
                                            <filtering>false</filtering>
                                            <includes>
                                                <include>templates/**</include>
                                                <include>static/**</include>
                                                <include>public/**</include>
                                                <include>freemark/**</include>
                                                <include>shp/**</include>
                                                <include>tpl/**</include>
                                                <include>**/*.properties</include>
                                                <include>**/*.yml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <!-- 输出路径 -->
                                    <outputDirectory>${project.build.directory}/resources</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- 分离打包结束 -->
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
